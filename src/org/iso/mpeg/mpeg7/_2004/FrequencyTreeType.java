//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.01.12 at 06:39:36 PM BRST 
//


package org.iso.mpeg.mpeg7._2004;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for FrequencyTreeType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="FrequencyTreeType">
 *   &lt;complexContent>
 *     &lt;extension base="{urn:mpeg:mpeg7:schema:2004}ViewDecompositionType">
 *       &lt;sequence>
 *         &lt;choice minOccurs="0">
 *           &lt;element name="View" type="{urn:mpeg:mpeg7:schema:2004}FrequencyViewType"/>
 *           &lt;element name="ViewRef" type="{urn:mpeg:mpeg7:schema:2004}ReferenceType"/>
 *         &lt;/choice>
 *         &lt;choice maxOccurs="unbounded" minOccurs="0">
 *           &lt;element name="Child" type="{urn:mpeg:mpeg7:schema:2004}FrequencyTreeType"/>
 *           &lt;element name="ChildRef" type="{urn:mpeg:mpeg7:schema:2004}ReferenceType"/>
 *         &lt;/choice>
 *       &lt;/sequence>
 *       &lt;attribute name="branching" use="required" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FrequencyTreeType", propOrder = {
    "view",
    "viewRef",
    "childOrChildRef"
})
public class FrequencyTreeType
    extends ViewDecompositionType
{

    @XmlElement(name = "View")
    protected FrequencyViewType view;
    @XmlElement(name = "ViewRef")
    protected ReferenceType viewRef;
    @XmlElements({
        @XmlElement(name = "Child", type = FrequencyTreeType.class),
        @XmlElement(name = "ChildRef", type = ReferenceType.class)
    })
    protected List<Object> childOrChildRef;
    @XmlAttribute(name = "branching", required = true)
    @XmlSchemaType(name = "nonNegativeInteger")
    protected BigInteger branching;

    /**
     * Gets the value of the view property.
     * 
     * @return
     *     possible object is
     *     {@link FrequencyViewType }
     *     
     */
    public FrequencyViewType getView() {
        return view;
    }

    /**
     * Sets the value of the view property.
     * 
     * @param value
     *     allowed object is
     *     {@link FrequencyViewType }
     *     
     */
    public void setView(FrequencyViewType value) {
        this.view = value;
    }

    /**
     * Gets the value of the viewRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getViewRef() {
        return viewRef;
    }

    /**
     * Sets the value of the viewRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setViewRef(ReferenceType value) {
        this.viewRef = value;
    }

    /**
     * Gets the value of the childOrChildRef property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the childOrChildRef property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getChildOrChildRef().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link FrequencyTreeType }
     * {@link ReferenceType }
     * 
     * 
     */
    public List<Object> getChildOrChildRef() {
        if (childOrChildRef == null) {
            childOrChildRef = new ArrayList<Object>();
        }
        return this.childOrChildRef;
    }

    /**
     * Gets the value of the branching property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getBranching() {
        return branching;
    }

    /**
     * Sets the value of the branching property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setBranching(BigInteger value) {
        this.branching = value;
    }

}
