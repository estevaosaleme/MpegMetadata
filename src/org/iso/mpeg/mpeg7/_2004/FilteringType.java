//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.01.12 at 06:39:36 PM BRST 
//


package org.iso.mpeg.mpeg7._2004;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for FilteringType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="FilteringType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="Filter" type="{urn:mpeg:mpeg7:schema:2004}FilterType"/>
 *         &lt;element name="PadSize" type="{urn:mpeg:mpeg7:schema:2004}SignalPlaneSampleType" minOccurs="0"/>
 *         &lt;element name="Shift" type="{urn:mpeg:mpeg7:schema:2004}SignalPlaneSampleType" minOccurs="0"/>
 *         &lt;element name="CropStart" type="{urn:mpeg:mpeg7:schema:2004}SignalPlaneSampleType" minOccurs="0"/>
 *         &lt;element name="CropEnd" type="{urn:mpeg:mpeg7:schema:2004}SignalPlaneSampleType" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="xPad" type="{urn:mpeg:mpeg7:schema:2004}paddingType" default="periodic" />
 *       &lt;attribute name="yPad" type="{urn:mpeg:mpeg7:schema:2004}paddingType" default="periodic" />
 *       &lt;attribute name="zPad" type="{urn:mpeg:mpeg7:schema:2004}paddingType" default="periodic" />
 *       &lt;attribute name="tPad" type="{urn:mpeg:mpeg7:schema:2004}paddingType" default="periodic" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FilteringType", propOrder = {
    "filter",
    "padSize",
    "shift",
    "cropStart",
    "cropEnd"
})
public class FilteringType {

    @XmlElement(name = "Filter", required = true)
    protected FilterType filter;
    @XmlElement(name = "PadSize")
    protected SignalPlaneSampleType padSize;
    @XmlElement(name = "Shift")
    protected SignalPlaneSampleType shift;
    @XmlElement(name = "CropStart")
    protected SignalPlaneSampleType cropStart;
    @XmlElement(name = "CropEnd")
    protected SignalPlaneSampleType cropEnd;
    @XmlAttribute(name = "xPad")
    protected String xPad;
    @XmlAttribute(name = "yPad")
    protected String yPad;
    @XmlAttribute(name = "zPad")
    protected String zPad;
    @XmlAttribute(name = "tPad")
    protected String tPad;

    /**
     * Gets the value of the filter property.
     * 
     * @return
     *     possible object is
     *     {@link FilterType }
     *     
     */
    public FilterType getFilter() {
        return filter;
    }

    /**
     * Sets the value of the filter property.
     * 
     * @param value
     *     allowed object is
     *     {@link FilterType }
     *     
     */
    public void setFilter(FilterType value) {
        this.filter = value;
    }

    /**
     * Gets the value of the padSize property.
     * 
     * @return
     *     possible object is
     *     {@link SignalPlaneSampleType }
     *     
     */
    public SignalPlaneSampleType getPadSize() {
        return padSize;
    }

    /**
     * Sets the value of the padSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link SignalPlaneSampleType }
     *     
     */
    public void setPadSize(SignalPlaneSampleType value) {
        this.padSize = value;
    }

    /**
     * Gets the value of the shift property.
     * 
     * @return
     *     possible object is
     *     {@link SignalPlaneSampleType }
     *     
     */
    public SignalPlaneSampleType getShift() {
        return shift;
    }

    /**
     * Sets the value of the shift property.
     * 
     * @param value
     *     allowed object is
     *     {@link SignalPlaneSampleType }
     *     
     */
    public void setShift(SignalPlaneSampleType value) {
        this.shift = value;
    }

    /**
     * Gets the value of the cropStart property.
     * 
     * @return
     *     possible object is
     *     {@link SignalPlaneSampleType }
     *     
     */
    public SignalPlaneSampleType getCropStart() {
        return cropStart;
    }

    /**
     * Sets the value of the cropStart property.
     * 
     * @param value
     *     allowed object is
     *     {@link SignalPlaneSampleType }
     *     
     */
    public void setCropStart(SignalPlaneSampleType value) {
        this.cropStart = value;
    }

    /**
     * Gets the value of the cropEnd property.
     * 
     * @return
     *     possible object is
     *     {@link SignalPlaneSampleType }
     *     
     */
    public SignalPlaneSampleType getCropEnd() {
        return cropEnd;
    }

    /**
     * Sets the value of the cropEnd property.
     * 
     * @param value
     *     allowed object is
     *     {@link SignalPlaneSampleType }
     *     
     */
    public void setCropEnd(SignalPlaneSampleType value) {
        this.cropEnd = value;
    }

    /**
     * Gets the value of the xPad property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getXPad() {
        if (xPad == null) {
            return "periodic";
        } else {
            return xPad;
        }
    }

    /**
     * Sets the value of the xPad property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setXPad(String value) {
        this.xPad = value;
    }

    /**
     * Gets the value of the yPad property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getYPad() {
        if (yPad == null) {
            return "periodic";
        } else {
            return yPad;
        }
    }

    /**
     * Sets the value of the yPad property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setYPad(String value) {
        this.yPad = value;
    }

    /**
     * Gets the value of the zPad property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getZPad() {
        if (zPad == null) {
            return "periodic";
        } else {
            return zPad;
        }
    }

    /**
     * Sets the value of the zPad property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setZPad(String value) {
        this.zPad = value;
    }

    /**
     * Gets the value of the tPad property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTPad() {
        if (tPad == null) {
            return "periodic";
        } else {
            return tPad;
        }
    }

    /**
     * Sets the value of the tPad property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTPad(String value) {
        this.tPad = value;
    }

}
