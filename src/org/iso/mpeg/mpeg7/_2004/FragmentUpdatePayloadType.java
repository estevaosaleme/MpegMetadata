//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.01.12 at 06:39:36 PM BRST 
//


package org.iso.mpeg.mpeg7._2004;

import java.util.HashMap;
import java.util.Map;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyAttribute;
import javax.xml.bind.annotation.XmlAnyElement;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.namespace.QName;
import org.w3c.dom.Element;


/**
 * <p>Java class for FragmentUpdatePayloadType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="FragmentUpdatePayloadType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;any processContents='skip' namespace='##other' minOccurs="0"/>
 *         &lt;element name="FragmentReference" type="{urn:mpeg:mpeg7:schema:2004}FragmentReferenceType" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="hasDeferredNodes" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;anyAttribute processContents='skip' namespace='##other'/>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FragmentUpdatePayloadType", propOrder = {
    "any",
    "fragmentReference"
})
public class FragmentUpdatePayloadType {

    @XmlAnyElement
    protected Element any;
    @XmlElement(name = "FragmentReference")
    protected FragmentReferenceType fragmentReference;
    @XmlAttribute(name = "hasDeferredNodes")
    protected Boolean hasDeferredNodes;
    @XmlAnyAttribute
    private Map<QName, String> otherAttributes = new HashMap<QName, String>();

    /**
     * Gets the value of the any property.
     * 
     * @return
     *     possible object is
     *     {@link Element }
     *     
     */
    public Element getAny() {
        return any;
    }

    /**
     * Sets the value of the any property.
     * 
     * @param value
     *     allowed object is
     *     {@link Element }
     *     
     */
    public void setAny(Element value) {
        this.any = value;
    }

    /**
     * Gets the value of the fragmentReference property.
     * 
     * @return
     *     possible object is
     *     {@link FragmentReferenceType }
     *     
     */
    public FragmentReferenceType getFragmentReference() {
        return fragmentReference;
    }

    /**
     * Sets the value of the fragmentReference property.
     * 
     * @param value
     *     allowed object is
     *     {@link FragmentReferenceType }
     *     
     */
    public void setFragmentReference(FragmentReferenceType value) {
        this.fragmentReference = value;
    }

    /**
     * Gets the value of the hasDeferredNodes property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isHasDeferredNodes() {
        if (hasDeferredNodes == null) {
            return false;
        } else {
            return hasDeferredNodes;
        }
    }

    /**
     * Sets the value of the hasDeferredNodes property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setHasDeferredNodes(Boolean value) {
        this.hasDeferredNodes = value;
    }

    /**
     * Gets a map that contains attributes that aren't bound to any typed property on this class.
     * 
     * <p>
     * the map is keyed by the name of the attribute and 
     * the value is the string value of the attribute.
     * 
     * the map returned by this method is live, and you can add new attribute
     * by updating the map directly. Because of this design, there's no setter.
     * 
     * 
     * @return
     *     always non-null
     */
    public Map<QName, String> getOtherAttributes() {
        return otherAttributes;
    }

}
