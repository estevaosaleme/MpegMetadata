//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.01.12 at 06:39:36 PM BRST 
//


package org.iso.mpeg.mpeg7._2004;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for InkSegmentType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="InkSegmentType">
 *   &lt;complexContent>
 *     &lt;extension base="{urn:mpeg:mpeg7:schema:2004}SegmentType">
 *       &lt;sequence>
 *         &lt;element name="InkMediaInformation" type="{urn:mpeg:mpeg7:schema:2004}InkMediaInformationType" minOccurs="0"/>
 *         &lt;element name="MediaTime" type="{urn:mpeg:mpeg7:schema:2004}MediaTimeType" minOccurs="0"/>
 *         &lt;element name="TemporalMask" type="{urn:mpeg:mpeg7:schema:2004}TemporalMaskType" minOccurs="0"/>
 *         &lt;element name="SceneGraphMask" type="{urn:mpeg:mpeg7:schema:2004}SceneGraphMaskType" minOccurs="0"/>
 *         &lt;element name="MediaSpaceMask" type="{urn:mpeg:mpeg7:schema:2004}MediaSpaceMaskType" minOccurs="0"/>
 *         &lt;element name="OrderedGroupDataSetMask" type="{urn:mpeg:mpeg7:schema:2004}OrderedGroupDataSetMaskType" minOccurs="0"/>
 *         &lt;choice maxOccurs="unbounded" minOccurs="0">
 *           &lt;element name="HandWritingRecogInformation" type="{urn:mpeg:mpeg7:schema:2004}HandWritingRecogInformationType"/>
 *           &lt;element name="HandWritingRecogResult" type="{urn:mpeg:mpeg7:schema:2004}HandWritingRecogResultType"/>
 *         &lt;/choice>
 *         &lt;choice maxOccurs="unbounded" minOccurs="0">
 *           &lt;element name="VisualDescriptor" type="{urn:mpeg:mpeg7:schema:2004}VisualDType"/>
 *           &lt;element name="VisualDescriptionScheme" type="{urn:mpeg:mpeg7:schema:2004}VisualDSType"/>
 *           &lt;element name="VisualTimeSeriesDescriptor" type="{urn:mpeg:mpeg7:schema:2004}VisualTimeSeriesType"/>
 *         &lt;/choice>
 *         &lt;choice maxOccurs="unbounded" minOccurs="0">
 *           &lt;element name="SpatialDecomposition" type="{urn:mpeg:mpeg7:schema:2004}InkSegmentSpatialDecompositionType"/>
 *           &lt;element name="TemporalDecomposition" type="{urn:mpeg:mpeg7:schema:2004}InkSegmentTemporalDecompositionType"/>
 *         &lt;/choice>
 *       &lt;/sequence>
 *       &lt;attribute name="type" default="content">
 *         &lt;simpleType>
 *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *             &lt;enumeration value="content"/>
 *             &lt;enumeration value="meta"/>
 *             &lt;enumeration value="mixed"/>
 *           &lt;/restriction>
 *         &lt;/simpleType>
 *       &lt;/attribute>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "InkSegmentType", propOrder = {
    "inkMediaInformation",
    "mediaTime",
    "temporalMask",
    "sceneGraphMask",
    "mediaSpaceMask",
    "orderedGroupDataSetMask",
    "handWritingRecogInformationOrHandWritingRecogResult",
    "visualDescriptorOrVisualDescriptionSchemeOrVisualTimeSeriesDescriptor",
    "spatialDecompositionOrTemporalDecomposition"
})
public class InkSegmentType
    extends SegmentType
{

    @XmlElement(name = "InkMediaInformation")
    protected InkMediaInformationType inkMediaInformation;
    @XmlElement(name = "MediaTime")
    protected MediaTimeType mediaTime;
    @XmlElement(name = "TemporalMask")
    protected TemporalMaskType temporalMask;
    @XmlElement(name = "SceneGraphMask")
    protected SceneGraphMaskType sceneGraphMask;
    @XmlElement(name = "MediaSpaceMask")
    protected MediaSpaceMaskType mediaSpaceMask;
    @XmlElement(name = "OrderedGroupDataSetMask")
    protected OrderedGroupDataSetMaskType orderedGroupDataSetMask;
    @XmlElements({
        @XmlElement(name = "HandWritingRecogInformation", type = HandWritingRecogInformationType.class),
        @XmlElement(name = "HandWritingRecogResult", type = HandWritingRecogResultType.class)
    })
    protected List<DSType> handWritingRecogInformationOrHandWritingRecogResult;
    @XmlElements({
        @XmlElement(name = "VisualDescriptor", type = VisualDType.class),
        @XmlElement(name = "VisualDescriptionScheme", type = VisualDSType.class),
        @XmlElement(name = "VisualTimeSeriesDescriptor", type = VisualTimeSeriesType.class)
    })
    protected List<Object> visualDescriptorOrVisualDescriptionSchemeOrVisualTimeSeriesDescriptor;
    @XmlElements({
        @XmlElement(name = "SpatialDecomposition", type = InkSegmentSpatialDecompositionType.class),
        @XmlElement(name = "TemporalDecomposition", type = InkSegmentTemporalDecompositionType.class)
    })
    protected List<SegmentDecompositionType> spatialDecompositionOrTemporalDecomposition;
    @XmlAttribute(name = "type")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String type;

    /**
     * Gets the value of the inkMediaInformation property.
     * 
     * @return
     *     possible object is
     *     {@link InkMediaInformationType }
     *     
     */
    public InkMediaInformationType getInkMediaInformation() {
        return inkMediaInformation;
    }

    /**
     * Sets the value of the inkMediaInformation property.
     * 
     * @param value
     *     allowed object is
     *     {@link InkMediaInformationType }
     *     
     */
    public void setInkMediaInformation(InkMediaInformationType value) {
        this.inkMediaInformation = value;
    }

    /**
     * Gets the value of the mediaTime property.
     * 
     * @return
     *     possible object is
     *     {@link MediaTimeType }
     *     
     */
    public MediaTimeType getMediaTime() {
        return mediaTime;
    }

    /**
     * Sets the value of the mediaTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link MediaTimeType }
     *     
     */
    public void setMediaTime(MediaTimeType value) {
        this.mediaTime = value;
    }

    /**
     * Gets the value of the temporalMask property.
     * 
     * @return
     *     possible object is
     *     {@link TemporalMaskType }
     *     
     */
    public TemporalMaskType getTemporalMask() {
        return temporalMask;
    }

    /**
     * Sets the value of the temporalMask property.
     * 
     * @param value
     *     allowed object is
     *     {@link TemporalMaskType }
     *     
     */
    public void setTemporalMask(TemporalMaskType value) {
        this.temporalMask = value;
    }

    /**
     * Gets the value of the sceneGraphMask property.
     * 
     * @return
     *     possible object is
     *     {@link SceneGraphMaskType }
     *     
     */
    public SceneGraphMaskType getSceneGraphMask() {
        return sceneGraphMask;
    }

    /**
     * Sets the value of the sceneGraphMask property.
     * 
     * @param value
     *     allowed object is
     *     {@link SceneGraphMaskType }
     *     
     */
    public void setSceneGraphMask(SceneGraphMaskType value) {
        this.sceneGraphMask = value;
    }

    /**
     * Gets the value of the mediaSpaceMask property.
     * 
     * @return
     *     possible object is
     *     {@link MediaSpaceMaskType }
     *     
     */
    public MediaSpaceMaskType getMediaSpaceMask() {
        return mediaSpaceMask;
    }

    /**
     * Sets the value of the mediaSpaceMask property.
     * 
     * @param value
     *     allowed object is
     *     {@link MediaSpaceMaskType }
     *     
     */
    public void setMediaSpaceMask(MediaSpaceMaskType value) {
        this.mediaSpaceMask = value;
    }

    /**
     * Gets the value of the orderedGroupDataSetMask property.
     * 
     * @return
     *     possible object is
     *     {@link OrderedGroupDataSetMaskType }
     *     
     */
    public OrderedGroupDataSetMaskType getOrderedGroupDataSetMask() {
        return orderedGroupDataSetMask;
    }

    /**
     * Sets the value of the orderedGroupDataSetMask property.
     * 
     * @param value
     *     allowed object is
     *     {@link OrderedGroupDataSetMaskType }
     *     
     */
    public void setOrderedGroupDataSetMask(OrderedGroupDataSetMaskType value) {
        this.orderedGroupDataSetMask = value;
    }

    /**
     * Gets the value of the handWritingRecogInformationOrHandWritingRecogResult property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the handWritingRecogInformationOrHandWritingRecogResult property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getHandWritingRecogInformationOrHandWritingRecogResult().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link HandWritingRecogInformationType }
     * {@link HandWritingRecogResultType }
     * 
     * 
     */
    public List<DSType> getHandWritingRecogInformationOrHandWritingRecogResult() {
        if (handWritingRecogInformationOrHandWritingRecogResult == null) {
            handWritingRecogInformationOrHandWritingRecogResult = new ArrayList<DSType>();
        }
        return this.handWritingRecogInformationOrHandWritingRecogResult;
    }

    /**
     * Gets the value of the visualDescriptorOrVisualDescriptionSchemeOrVisualTimeSeriesDescriptor property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the visualDescriptorOrVisualDescriptionSchemeOrVisualTimeSeriesDescriptor property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getVisualDescriptorOrVisualDescriptionSchemeOrVisualTimeSeriesDescriptor().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link VisualDType }
     * {@link VisualDSType }
     * {@link VisualTimeSeriesType }
     * 
     * 
     */
    public List<Object> getVisualDescriptorOrVisualDescriptionSchemeOrVisualTimeSeriesDescriptor() {
        if (visualDescriptorOrVisualDescriptionSchemeOrVisualTimeSeriesDescriptor == null) {
            visualDescriptorOrVisualDescriptionSchemeOrVisualTimeSeriesDescriptor = new ArrayList<Object>();
        }
        return this.visualDescriptorOrVisualDescriptionSchemeOrVisualTimeSeriesDescriptor;
    }

    /**
     * Gets the value of the spatialDecompositionOrTemporalDecomposition property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the spatialDecompositionOrTemporalDecomposition property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSpatialDecompositionOrTemporalDecomposition().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link InkSegmentSpatialDecompositionType }
     * {@link InkSegmentTemporalDecompositionType }
     * 
     * 
     */
    public List<SegmentDecompositionType> getSpatialDecompositionOrTemporalDecomposition() {
        if (spatialDecompositionOrTemporalDecomposition == null) {
            spatialDecompositionOrTemporalDecomposition = new ArrayList<SegmentDecompositionType>();
        }
        return this.spatialDecompositionOrTemporalDecomposition;
    }

    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getType() {
        if (type == null) {
            return "content";
        } else {
            return type;
        }
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setType(String value) {
        this.type = value;
    }

}
