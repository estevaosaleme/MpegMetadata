//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.01.12 at 06:38:19 PM BRST 
//


package org.iso.mpeg.mpegv._2010.sedl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyAttribute;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.namespace.QName;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="DescriptionMetadata" type="{urn:mpeg:mpeg-v:2010:01-SEDL-NS}DescriptionMetadataType" minOccurs="0"/>
 *         &lt;choice maxOccurs="unbounded">
 *           &lt;element ref="{urn:mpeg:mpeg-v:2010:01-SEDL-NS}Declarations"/>
 *           &lt;element ref="{urn:mpeg:mpeg-v:2010:01-SEDL-NS}GroupOfEffects"/>
 *           &lt;element ref="{urn:mpeg:mpeg-v:2010:01-SEDL-NS}Effect"/>
 *           &lt;element ref="{urn:mpeg:mpeg-v:2010:01-SEDL-NS}ReferenceEffect"/>
 *         &lt;/choice>
 *       &lt;/sequence>
 *       &lt;attribute name="autoExtraction" type="{urn:mpeg:mpeg-v:2010:01-SEDL-NS}autoExtractionType" />
 *       &lt;anyAttribute processContents='lax' namespace='##other'/>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "descriptionMetadata",
    "declarationsOrGroupOfEffectsOrEffect"
})
@XmlRootElement(name = "SEM")
public class SEM {

    @XmlElement(name = "DescriptionMetadata")
    protected DescriptionMetadataType descriptionMetadata;
    @XmlElements({
        @XmlElement(name = "Declarations", type = DeclarationsType.class),
        @XmlElement(name = "GroupOfEffects", type = GroupOfEffectsType.class),
        @XmlElement(name = "Effect", type = EffectBaseType.class),
        @XmlElement(name = "ReferenceEffect", type = ReferenceEffectType.class)
    })
    protected List<SEMBaseType> declarationsOrGroupOfEffectsOrEffect;
    @XmlAttribute(name = "autoExtraction")
    protected AutoExtractionType autoExtraction;
    @XmlAnyAttribute
    private Map<QName, String> otherAttributes = new HashMap<QName, String>();

    /**
     * Gets the value of the descriptionMetadata property.
     * 
     * @return
     *     possible object is
     *     {@link DescriptionMetadataType }
     *     
     */
    public DescriptionMetadataType getDescriptionMetadata() {
        return descriptionMetadata;
    }

    /**
     * Sets the value of the descriptionMetadata property.
     * 
     * @param value
     *     allowed object is
     *     {@link DescriptionMetadataType }
     *     
     */
    public void setDescriptionMetadata(DescriptionMetadataType value) {
        this.descriptionMetadata = value;
    }

    /**
     * Gets the value of the declarationsOrGroupOfEffectsOrEffect property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the declarationsOrGroupOfEffectsOrEffect property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getDeclarationsOrGroupOfEffectsOrEffect().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link DeclarationsType }
     * {@link GroupOfEffectsType }
     * {@link EffectBaseType }
     * {@link ReferenceEffectType }
     * 
     * 
     */
    public List<SEMBaseType> getDeclarationsOrGroupOfEffectsOrEffect() {
        if (declarationsOrGroupOfEffectsOrEffect == null) {
            declarationsOrGroupOfEffectsOrEffect = new ArrayList<SEMBaseType>();
        }
        return this.declarationsOrGroupOfEffectsOrEffect;
    }

    /**
     * Gets the value of the autoExtraction property.
     * 
     * @return
     *     possible object is
     *     {@link AutoExtractionType }
     *     
     */
    public AutoExtractionType getAutoExtraction() {
        return autoExtraction;
    }

    /**
     * Sets the value of the autoExtraction property.
     * 
     * @param value
     *     allowed object is
     *     {@link AutoExtractionType }
     *     
     */
    public void setAutoExtraction(AutoExtractionType value) {
        this.autoExtraction = value;
    }

    /**
     * Gets a map that contains attributes that aren't bound to any typed property on this class.
     * 
     * <p>
     * the map is keyed by the name of the attribute and 
     * the value is the string value of the attribute.
     * 
     * the map returned by this method is live, and you can add new attribute
     * by updating the map directly. Because of this design, there's no setter.
     * 
     * 
     * @return
     *     always non-null
     */
    public Map<QName, String> getOtherAttributes() {
        return otherAttributes;
    }

}
